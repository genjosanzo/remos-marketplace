<?xml version="1.0" encoding="UTF-8"?>
<!-- THIS IS GENERATED XML. DO NOT EDIT ANY CONTENT!!!! -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd"
	>
 	 <!-- ========================= PERSISTENCE DEFINITIONS ========================= -->

    <!--
       - Builds a Hibernate SessionFactory and makes it available as bean reference.
       - All necessary settings get specified here, without relying on an external
       - Hibernate config file like "WEB-INF/classes/hibernate.cfg.xml".
       -
       - The SessionFactory will use the locally defined DataSource in this context.
       - This allows for convenient sharing of transactions with plain JDBC access
       - code, if HibernateTransactionManager is explictly given the same DataSource.
       -
       - This definition could also use a JDBC DataSource specified via Hibernate
       - properties. Note that to be able to share transactions with plain JDBC access
       - code then, that DataSource would need to be a JNDI one that should match the
       - one given to HibernateTransactionManager and data access objects.
       -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="entityInterceptor" ref="nodeInterceptor"></property>
        <property name="annotatedClasses">
        <list>
        
        	<value>org.remus.marketplace.entities.Market</value>
        	<value>org.remus.marketplace.entities.Category</value>
        	<value>org.remus.marketplace.entities.Node</value>
        	<value>org.remus.marketplace.entities.InstallableUnit</value>
        	<value>org.remus.marketplace.entities.Platform</value>
        	<value>org.remus.marketplace.entities.Clickthrough</value>
        	<value>org.remus.marketplace.entities.Download</value>
        </list>
        </property>
        <property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.jdbc.batch_size">0</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">
					false
				</prop>
				<!--prop key="hibernate.cache.use_second_level_cache">true</prop-->
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<!--prop key="hibernate.cache.use_query_cache">true</prop-->
				<prop key="hibernate.cache.provider_class">
					net.sf.ehcache.hibernate.SingletonEhCacheProvider
				</prop>
			</props>
		</property>
    </bean>
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${db.driver_class}" />
		<property name="jdbcUrl" value="${db.url}" />
		<property name="user" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>

    <bean id="hibernateSupport" class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
     <bean id="nodeInterceptor" class="org.remus.marketplace.indexing.NodeIndexListener">
    	<property name="indexService" ref="indexService"></property>
    </bean>
    
    <bean id="indexService" class="org.remus.marketplace.indexing.impl.IndexServiceImpl">
    	<property name="indexDir" value="${lucene.index.dir}"></property>
    	
    </bean>
    
    
</beans>

